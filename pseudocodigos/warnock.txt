// tipos das estruturas de dados
registro Cor { int r, int g, int b }
registro Pixel { int x, int y, int z, Cor cor }
registro Poligono { Pixel[] pixels }
registro Imagem { Poligono[] poligonos }

funcao Imagem[] Divide(Imagem imagem)
    
    //   H +--------+--------+
    //     |        |        |
    //     |   Q3   |   Q4   |
    //     |        |        |
    // H/2 +--------+--------+
    //     |        |        |
    //     |   Q1   |   Q2   |
    //     |        |        |
    //   0 +--------+--------+
    //     0       W/2       W

    W = imagem.Largura
    H = imagem.Altura
    imagens = Imagem[4]
    imagens[0] = imagem.subimagem(0, W/2, 0, H/2)) // quadrante 1 (Q1)
    imagens[1] = imagem.subimagem(W/2, W, 0, H/2)) // quadrante 2 (Q2)
    imagens[2] = imagem.subimagem(0, W/2, H/2, H)) // quadrante 3 (Q3)
    imagens[3] = imagem.subimagem(W/2, W, H/2, H)) // quadrante 4 (Q4)

    retorna imagens

fim_funcao

procedimento Warnock(Imagem imagemOriginal)

    imagens = Lista de Imagem
    imagens.inserir(imagemOriginal)

    enquanto imagens não for vazio
        regiao = imagens.frente // pega a primeira imagem da lista

        se (um polígono cobre a região totalmente e está na frente)
            pintar(regiao,corDoPoligono) // pinta a região da cor do polígono
        senão se (nenhum polígono intercepta a região)
            pintar(regiao,corDeFundo) // pinta a região da cor de fundo
        senão se (apenas um polígono a intercepta)
            pintar(parteExterna(regiao),corDeFundo)    // pinta a região interna da cor de fundo
            pintar(parteInterna(regiao),corDoPoligono) // pinta o interior da regioao da cor do polígono
        senão
            se (regiao.Largura > 1 e regiao.Altura > 1) // ainda posso dividir
                novasRegioes = Divide(regiao)
                imagens.inserirTodos(novasRegioes)
            senão // trata-se de um único pixel
                pintar(regiao,corDoPoligonoMaisRaso) // pintar o polígono com menor profundidade

        imagens.remove(regiao)

fim_procedimento
